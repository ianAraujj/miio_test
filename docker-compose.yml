version: "3.8"

services:
  nginx:
    image: nginx:alpine
    container_name: nginx_app
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      #- ./staticfiles:/static
      #- ./media:/media
      - ./:/code
    ports:
      - "80:80"
    depends_on:
      - web
    restart: always

  db:
    image: postgres:latest
    container_name: db_app
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: danger
      POSTGRES_DB: movie_manager
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    restart: always

  web:
    container_name: web_app
    build: .
    command: bash -c "python manage.py collectstatic --no-input && python manage.py migrate --noinput && gunicorn movie_manager.wsgi:application -b 0.0.0.0:8000 --timeout=120  --workers 5 --log-level=info"
    volumes:
      - .:/src
    expose:
      - "8000"
    env_file: .env
    restart: always
    depends_on:
      - db

  celery:
    build: .
    command: bash -c "rm -rf celerybeat.pid && celery -A movie_manager worker -l info"
    container_name: celery_worker_app
    volumes:
      - .:/src
    env_file: .env
    depends_on:
      - redis
      - web

  celery-beat:
    build: .
    container_name: celery_beat_app
    command: celery -A movie_manager beat -l info
    volumes:
      - .:/src
    env_file: .env
    depends_on:
      - redis
      - web
      - celery

  redis:
    image: "redis:alpine"
    container_name: redis_app
    expose:
      - "6379"

volumes:
  postgres_data:
  static-data:
